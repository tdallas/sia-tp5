from sklearn.neural_network import MLPClassifier
from bitstring import BitArray
import numpy as np

clf = MLPClassifier(solver='adam', alpha=1e-3, hidden_layer_sizes=(2, 2,),
                    random_state=1, activation='tanh', max_iter=1500)

arrays = [
    ["0x00", "0x00", "0x00", "0x00", "0x00", "0x00", "0x00"],
    ["0x04", "0x04", "0x04", "0x04", "0x04", "0x00", "0x04"],
    ["0x09", "0x09", "0x12", "0x00", "0x00", "0x00", "0x00"],
    ["0x0a", "0x0a", "0x1f", "0x0a", "0x1f", "0x0a", "0x0a"],
    ["0x04", "0x0f", "0x14", "0x0e", "0x05", "0x1e", "0x04"],
    ["0x19", "0x19", "0x02", "0x04", "0x08", "0x13", "0x13"],
    ["0x04", "0x0a", "0x0a", "0x0a", "0x15", "0x12", "0x0d"],
    ["0x04", "0x04", "0x08", "0x00", "0x00", "0x00", "0x00"],
    ["0x02", "0x04", "0x08", "0x08", "0x08", "0x04", "0x02"],
    ["0x08", "0x04", "0x02", "0x02", "0x02", "0x04", "0x08"],
    ["0x04", "0x15", "0x0e", "0x1f", "0x0e", "0x15", "0x04"],
    ["0x00", "0x04", "0x04", "0x1f", "0x04", "0x04", "0x00"],
    ["0x00", "0x00", "0x00", "0x00", "0x04", "0x04", "0x08"],
    ["0x00", "0x00", "0x00", "0x1f", "0x00", "0x00", "0x00"],
    ["0x00", "0x00", "0x00", "0x00", "0x00", "0x0c", "0x0c"],
    ["0x01", "0x01", "0x02", "0x04", "0x08", "0x10", "0x10"],
    ["0x0e", "0x11", "0x13", "0x15", "0x19", "0x11", "0x0e"],
    ["0x04", "0x0c", "0x04", "0x04", "0x04", "0x04", "0x0e"],
    ["0x0e", "0x11", "0x01", "0x02", "0x04", "0x08", "0x1f"],
    ["0x0e", "0x11", "0x01", "0x06", "0x01", "0x11", "0x0e"],
    ["0x02", "0x06", "0x0a", "0x12", "0x1f", "0x02", "0x02"],
    ["0x1f", "0x10", "0x1e", "0x01", "0x01", "0x11", "0x0e"],
    ["0x06", "0x08", "0x10", "0x1e", "0x11", "0x11", "0x0e"],
    ["0x1f", "0x01", "0x02", "0x04", "0x08", "0x08", "0x08"],
    ["0x0e", "0x11", "0x11", "0x0e", "0x11", "0x11", "0x0e"],
    ["0x0e", "0x11", "0x11", "0x0f", "0x01", "0x02", "0x0c"],
    ["0x00", "0x0c", "0x0c", "0x00", "0x0c", "0x0c", "0x00"],
    ["0x00", "0x0c", "0x0c", "0x00", "0x0c", "0x04", "0x08"],
    ["0x02", "0x04", "0x08", "0x10", "0x08", "0x04", "0x02"],
    ["0x00", "0x00", "0x1f", "0x00", "0x1f", "0x00", "0x00"],
    ["0x08", "0x04", "0x02", "0x01", "0x02", "0x04", "0x08"],
    ["0x0e", "0x11", "0x01", "0x02", "0x04", "0x00", "0x04"]
]

outputs = ["0x20",
           "0x21",
           "0x22",
           "0x23",
           "0x24",
           "0x25",
           "0x26",
           "0x27",
           "0x28",
           "0x29",
           "0x2a",
           "0x2b",
           "0x2c",
           "0x2d",
           "0x2e",
           "0x2f",
           "0x30",
           "0x31",
           "0x32",
           "0x33",
           "0x34",
           "0x35",
           "0x36",
           "0x37",
           "0x38",
           "0x39",
           "0x3a",
           "0x3b",
           "0x3c",
           "0x3d",
           "0x3e",
           "0x3f"]

inputs_matrix_bits = []
outputs_matrix_bits = []

for array in arrays:
    input = []
    for hexa in array:
        for bit in BitArray(hex=hexa).bin:
            input.append(int(bit))
    inputs_matrix_bits.append(input)

for hexa in outputs:
    # output =[]
    # for bit in BitArray(hex=hexa).bin:
    #     output.append(bit)
    outputs_matrix_bits.append(int(BitArray(hex=hexa).bin))

print('inputs_matrix_bits', inputs_matrix_bits)
print('outputs_matrix_bits', outputs_matrix_bits)

clf.fit(inputs_matrix_bits, outputs_matrix_bits)

print(clf.predict([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]))
